function escape(html, encode) {
    return html
        .replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;');
}
exports.escape = escape;
function unescape(html) {
    return html.replace(/&([#\w]+);/g, function (_, n) {
        n = n.toLowerCase();
        if (n === 'colon')
            return ':';
        if (n.charAt(0) === '#') {
            return n.charAt(1) === 'x'
                ? String.fromCharCode(parseInt(n.substring(2), 16))
                : String.fromCharCode(+n.substring(1));
        }
        return '';
    });
}
exports.unescape = unescape;
function replace(regex, opt) {
    regex = regex.source;
    opt = opt || '';
    return function self(name, val) {
        if (!name)
            return new RegExp(regex, opt);
        val = val.source || val;
        val = val.replace(/(^|[^\[])\^/g, '$1');
        regex = regex.replace(name, val);
        return self;
    };
}
exports.replace = replace;
function validateStyle(source, options) {
    var retString = "";
    while (source) {
        var matches = options.compiledStyles.exec(source);
        if (matches) {
            source = source.substring(matches[0].length);
            if (matches[1]) {
                retString = retString + matches[2] + ": " + matches[3] + ";";
            }
        }
    }
    return retString;
}
exports.validateStyle = validateStyle;
function validateClass(source, options) {
    var retString = "";
    while (source) {
        var matches = options.compiledClasses.exec(source);
        if (matches) {
            source = source.substring(matches[0].length);
            if (matches[1]) {
                retString = retString + ((retString === '') ? '' : ' ') + matches[1];
            }
        }
    }
    return retString;
}
exports.validateClass = validateClass;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiJ0cy8iLCJzb3VyY2VzIjpbInNyYy9IZWxwZXJzLnRzIl0sIm5hbWVzIjpbImVzY2FwZSIsInVuZXNjYXBlIiwicmVwbGFjZSIsInJlcGxhY2Uuc2VsZiIsInZhbGlkYXRlU3R5bGUiLCJ2YWxpZGF0ZUNsYXNzIl0sIm1hcHBpbmdzIjoiQUFFQSxnQkFBdUIsSUFBWSxFQUFFLE1BQWdCO0lBQ25EQSxNQUFNQSxDQUFDQSxJQUFJQTtTQUNSQSxPQUFPQSxDQUFDQSxDQUFDQSxNQUFNQSxHQUFHQSxjQUFjQSxHQUFHQSxJQUFJQSxFQUFFQSxPQUFPQSxDQUFDQTtTQUNqREEsT0FBT0EsQ0FBQ0EsSUFBSUEsRUFBRUEsTUFBTUEsQ0FBQ0E7U0FDckJBLE9BQU9BLENBQUNBLElBQUlBLEVBQUVBLE1BQU1BLENBQUNBO1NBQ3JCQSxPQUFPQSxDQUFDQSxJQUFJQSxFQUFFQSxRQUFRQSxDQUFDQTtTQUN2QkEsT0FBT0EsQ0FBQ0EsSUFBSUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7QUFDNUJBLENBQUNBO0FBUGUsY0FBTSxTQU9yQixDQUFBO0FBRUQsa0JBQXlCLElBQVk7SUFDbkNDLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE9BQU9BLENBQUNBLGFBQWFBLEVBQUVBLFVBQVNBLENBQUNBLEVBQUVBLENBQUNBO1FBQzlDLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLE9BQU8sQ0FBQztZQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDOUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUc7a0JBQ3RCLE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxT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